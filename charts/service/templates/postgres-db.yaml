{{ if .Values.postgres }}
{{ $root := . }}
{{ $teamId := .Values.postgres.teamId }}
{{ $dbName := .Values.postgres.dbName }}
{{ $dbOwner := .Values.postgres.owner }}
{{ $releaseNamespace := .Release.Namespace }}
{{ $dbClusterName := printf "%s-%s" $teamId $dbName }}
{{ $dbOwnerSecret := printf "%s.%s" $dbOwner $dbClusterName }}
{{ if $root.Values.feature }}
{{ $dbClusterName = printf "%s-%s-%s" $teamId $root.Values.feature $dbName }}
{{ $dbOwnerSecret = printf "%s.%s" $dbOwner $dbClusterName }}
{{ end }}

{{ $dbNamespace := printf "%s-database" $releaseNamespace }}
---
apiVersion: "acid.zalan.do/v1"
kind: postgresql
metadata:
  name: {{ $dbClusterName }}
  namespace: {{ $dbNamespace }}
  labels:
{{ include "service.commonLabels" . | indent 4 }}
  annotations:
    {{- if .Values.cleanUpIn }}
    janitor/ttl: {{ .Values.cleanUpIn }}
    {{- end }}
spec:
  teamId: {{ quote $teamId }}
  volume:
    size: {{ .Values.postgres.size }}
    storageClass: px-postgres-sc
  numberOfInstances: {{ .Values.postgres.numberOfInstances }}
  users:
    # database owner
    {{ $dbOwner }}:
    - superuser
    - createdb

  #databases: name->owner
  databases:
    {{ $dbName }}: {{ $dbOwner }}
  postgresql:
    version: {{ quote .Values.postgres.version }}

  nodeAffinity:
  requiredDuringSchedulingIgnoredDuringExecution:
    nodeSelectorTerms:
      - matchExpressions:
          - key: px/enabled
            operator: In
            values:
              - "true"
      - matchExpressions:
        - key: NodeType
          operator: In
          values:
          - "storage"

  tolerations:
  - key: "dedicated"
    operator: "Equal"
    value: "storage"
    effect: "NoSchedule"

# Replicated Secret from the {Database Namespace}/{dbOwner Secret}
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    replicator.v1.mittwald.de/replicate-from: {{ $dbNamespace }}/{{ $dbOwnerSecret }}
  labels:
    cluster-name: {{ $dbClusterName }}
    team: {{ $teamId }}
  name: {{ $dbOwnerSecret }}
  namespace: {{ $releaseNamespace }}
data: {}

{{ end }}
